name: Publish to PyPI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Only trigger on version tags starting with 'v'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for tags
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'  # Enable pip caching
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install build twine pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      
      - name: Clean build directory
        run: |
          rm -rf dist/
          rm -rf build/
          rm -rf *.egg-info
      
      - name: Build package
        run: python -m build
      
      - name: Run tests
        run: pytest
      
      - name: Check package
        run: |
          twine check dist/*
      
      - name: Publish to Test PyPI
        if: github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
          TWINE_REPOSITORY: testpypi
        run: |
          echo "Attempting to upload to TestPyPI..."
          twine upload --verbose --skip-existing dist/*

      - name: Verify tag version matches package version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          PACKAGE_VERSION=$(python setup.py --version)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Package version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --verbose dist/*